{"version":3,"file":"static/js/485.d6c32d2f.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const ErrorText = styled.p`\n  display: inline-block;\n  margin-top: 4px;\n  padding: 8px;\n  font-size: 18px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.secondaryText};\n  background-color: #fabdb5;\n  border: 1px solid #e34542;\n  border-radius: 8px;\n`;\n","import PropTypes from 'prop-types';\nimport * as S from './ErrorMessage.styled';\n\nconst ErrorMessage = ({ errorText }) => (\n  <S.Container>\n    <S.ErrorText>{errorText}</S.ErrorText>\n  </S.Container>\n);\n\nErrorMessage.propTypes = {\n  errorText: PropTypes.string.isRequired,\n};\n\nexport default ErrorMessage;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const LinkToDetails = styled(Link)`\n  display: block;\n  padding: 4px 8px;\n  max-width: 520px;\n\n  font-size: 18px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.primaryText};\n\n  background-color: ${({ theme }) => theme.colors.primaryBg};\n  border: 1px solid ${({ theme }) => theme.colors.secondaryText};\n  border-radius: 8px;\n\n  transition: color\n      ${({ theme }) => `${theme.duration} ${theme.timingFunction}`},\n    background-color\n      ${({ theme }) => `${theme.duration} ${theme.timingFunction}`};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.primary};\n    background-color: ${({ theme }) => theme.colors.secondaryBg};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport * as S from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <S.List>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <S.LinkToDetails to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </S.LinkToDetails>\n        </li>\n      ))}\n    </S.List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-bottom: 12px;\n\n  font-size: 28px;\n  line-height: 1.5;\n`;\n","import { useState, useEffect } from 'react';\nimport * as moviesAPI from 'services';\nimport { Status } from 'constants';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\nimport * as S from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrending = async () => {\n      try {\n        setStatus(Status.PENDING);\n\n        const { results } = await moviesAPI.getTrending();\n\n        const newMovies = results.map(({ id, title }) => ({ id, title }));\n\n        setMovies(newMovies);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n        setStatus(Status.REJECTED);\n      }\n    };\n\n    fetchTrending();\n  }, []);\n\n  if (status === Status.IDLE) {\n    return (\n      <main>\n        <section>\n          <S.Title>Trending today</S.Title>\n        </section>\n      </main>\n    );\n  }\n\n  if (status === Status.PENDING) {\n    return (\n      <main>\n        <section>\n          <S.Title>Trending today</S.Title>\n          <Loader />\n        </section>\n      </main>\n    );\n  }\n\n  if (status === Status.REJECTED) {\n    return (\n      <main>\n        <section>\n          <S.Title>Trending today</S.Title>\n          <ErrorMessage errorText={error.message} />\n        </section>\n      </main>\n    );\n  }\n\n  if (status === Status.RESOLVED) {\n    return (\n      <main>\n        <section>\n          <S.Title>Trending today</S.Title>\n          <MoviesList movies={movies} />\n        </section>\n      </main>\n    );\n  }\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'e4ed0f086cbca77909d91aa152a380ab';\n\nconst defaultParams = {\n  api_key: API_KEY,\n};\n\nexport const getTrending = async () => {\n  const res = await axios.get('/trending/movie/day', { params: defaultParams });\n\n  return res.data;\n};\n\nexport const searchMoviesByQuery = async query => {\n  const params = {\n    ...defaultParams,\n    query,\n  };\n\n  const res = await axios.get('/search/movie', { params });\n\n  return res.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const res = await axios.get(`/movie/${movieId}`, { params: defaultParams });\n\n  return res.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const res = await axios.get(`/movie/${movieId}/credits`, {\n    params: defaultParams,\n  });\n\n  return res.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const res = await axios.get(`/movie/${movieId}/reviews`, {\n    params: defaultParams,\n  });\n\n  return res.data;\n};\n"],"names":["Container","styled","ErrorText","theme","colors","secondaryText","errorText","List","LinkToDetails","Link","primaryText","primaryBg","duration","timingFunction","primary","secondaryBg","movies","location","useLocation","map","id","title","to","state","from","Title","useState","setMovies","Status","status","setStatus","error","setError","useEffect","fetchTrending","moviesAPI","results","newMovies","console","log","Loader","ErrorMessage","message","MoviesList","axios","defaultParams","api_key","getTrending","params","res","data","searchMoviesByQuery","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}