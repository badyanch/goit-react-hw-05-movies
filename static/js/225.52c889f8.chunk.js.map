{"version":3,"file":"static/js/225.52c889f8.chunk.js","mappings":"kMAEaA,EAAYC,EAAAA,GAAAA,IAAH,sEAKTC,EAAYD,EAAAA,GAAAA,EAAH,kOAMX,qBAAGE,MAAkBC,OAAOC,aAA5B,I,SCAX,EAVqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACnB,SAAC,EAAD,WACE,SAAC,EAAD,UAAcA,KAFG,C,qLCDRC,EAAON,EAAAA,GAAAA,IAAH,2HAGK,qBAAGE,MAAkBC,OAAOI,SAA5B,IACA,qBAAGL,MAAkBC,OAAOC,aAA5B,IAITI,EAASR,EAAAA,GAAAA,GAAH,2FAONS,EAAST,EAAAA,GAAAA,EAAH,gFAGR,qBAAGE,MAAkBC,OAAOC,aAA5B,I,SCLX,EAZmB,SAAC,GAAD,IAAGM,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAX,OACjB,UAAC,EAAD,YACE,UAAC,EAAD,WAAU,WAASD,MACnB,SAAC,EAAD,UAAWC,MAHI,E,mBCDNC,EAAYZ,EAAAA,GAAAA,GAAH,2NAaTa,EAAOb,EAAAA,GAAAA,GAAH,mFAMJc,EAAWd,EAAAA,GAAAA,EAAH,8MAMV,qBAAGE,MAAkBC,OAAOC,aAA5B,IAEW,qBAAGF,MAAkBC,OAAOI,SAA5B,IACA,qBAAGL,MAAkBC,OAAOC,aAA5B,IC4CtB,EAjEgB,WACd,OAA8BW,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAASG,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOM,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAgC,IAAnBT,EAAQU,OA2B3B,OAzBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,wGAEtBR,EAAUF,EAAAA,EAAAA,SAFY,SAIIW,EAAAA,GAA0BN,GAJ9B,gBAIdO,EAJc,EAIdA,QAEFC,EAAaD,EAAQE,KAAI,kBAA8B,CAC3DC,GAD6B,EAAGA,GAEhCvB,OAF6B,EAAOA,OAGpCwB,QAH6B,EAAeA,QAAf,IAM/BjB,EAAWc,GACXX,EAAUF,EAAAA,EAAAA,UAbY,kDAetBiB,QAAQC,IAAR,MACAd,EAAS,EAAD,IACRF,EAAUF,EAAAA,EAAAA,UAjBY,0DAAH,qDAqBvBU,GACD,GAAE,CAACL,IAEAJ,IAAWD,EAAAA,EAAAA,MACN,wBAGLC,IAAWD,EAAAA,EAAAA,SACN,SAACmB,EAAA,EAAD,IAGLlB,IAAWD,EAAAA,EAAAA,UACN,SAACoB,EAAA,EAAD,CAAcjC,UAAWgB,EAAMkB,UAGpCpB,IAAWD,EAAAA,EAAAA,UAEX,iCACE,SAAC,EAAD,UAAa,YACZO,GACC,SAAC,EAAD,UAAY,+CAEZ,SAAC,EAAD,UACGT,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,OAAQwB,EAAf,EAAeA,QAAf,OACX,yBACE,SAAC,EAAD,CAAYxB,OAAQA,EAAQC,OAAQuB,KAD7BD,EADE,cARvB,CAkBD,C,6MCtEDO,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAEMC,EAAgB,CACpBC,QAHc,oCAMHC,EAAW,mCAAG,oGACPH,EAAAA,EAAAA,IAAU,sBAAuB,CAAEI,OAAQH,IADpC,cACnBI,EADmB,yBAGlBA,EAAIC,MAHc,2CAAH,qDAMXC,EAAmB,mCAAG,WAAMC,GAAN,gFAC3BJ,GAD2B,kBAE5BH,GAF4B,IAG/BO,MAAAA,IAH+B,SAMfR,EAAAA,EAAAA,IAAU,gBAAiB,CAAEI,OAAAA,IANd,cAM3BC,EAN2B,yBAQ1BA,EAAIC,MARsB,2CAAH,sDAWnBG,EAAe,mCAAG,WAAM1B,GAAN,uFACXiB,EAAAA,EAAAA,IAAA,iBAAoBjB,GAAW,CAAEqB,OAAQH,IAD9B,cACvBI,EADuB,yBAGtBA,EAAIC,MAHkB,2CAAH,sDAMfI,EAAe,mCAAG,WAAM3B,GAAN,uFACXiB,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,YAAuC,CACvDqB,OAAQH,IAFmB,cACvBI,EADuB,yBAKtBA,EAAIC,MALkB,2CAAH,sDAQfK,EAAe,mCAAG,WAAM5B,GAAN,uFACXiB,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,YAAuC,CACvDqB,OAAQH,IAFmB,cACvBI,EADuB,yBAKtBA,EAAIC,MALkB,2CAAH,qD","sources":["components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/ReviewCard/ReviewCard.styled.jsx","components/ReviewCard/ReviewCard.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const ErrorText = styled.p`\n  display: inline-block;\n  margin-top: 4px;\n  padding: 8px;\n  font-size: 18px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.secondaryText};\n  background-color: #fabdb5;\n  border: 1px solid #e34542;\n  border-radius: 8px;\n`;\n","import PropTypes from 'prop-types';\nimport * as S from './ErrorMessage.styled';\n\nconst ErrorMessage = ({ errorText }) => (\n  <S.Container>\n    <S.ErrorText>{errorText}</S.ErrorText>\n  </S.Container>\n);\n\nErrorMessage.propTypes = {\n  errorText: PropTypes.string.isRequired,\n};\n\nexport default ErrorMessage;\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  padding: 8px 12px;\n\n  background-color: ${({ theme }) => theme.colors.primaryBg};\n  border: 1px solid ${({ theme }) => theme.colors.secondaryText};\n  border-radius: 8px;\n`;\n\nexport const Author = styled.h3`\n  margin-bottom: 12px;\n\n  font-size: 20px;\n  line-height: 1.5;\n`;\n\nexport const Review = styled.p`\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.secondaryText};\n`;\n","import PropTypes from 'prop-types';\nimport * as S from './ReviewCard.styled';\n\nconst ReviewCard = ({ author, review }) => (\n  <S.Card>\n    <S.Author>Author: {author}</S.Author>\n    <S.Review>{review}</S.Review>\n  </S.Card>\n);\n\nReviewCard.propTypes = {\n  author: PropTypes.string.isRequired,\n  review: PropTypes.string.isRequired,\n};\n\nexport default ReviewCard;\n","import styled from 'styled-components';\n\nexport const HideTitle = styled.h2`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const NotFound = styled.p`\n  display: inline-block;\n  padding: 4px 8px;\n\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.secondaryText};\n\n  background-color: ${({ theme }) => theme.colors.primaryBg};\n  border: 1px solid ${({ theme }) => theme.colors.secondaryText};\n  border-radius: 8px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as moviesAPI from 'services';\nimport { Status } from 'constants';\nimport ReviewCard from 'components/ReviewCard/ReviewCard';\nimport Loader from 'components/Loader/Loader';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\nimport * as S from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  const isNotFound = reviews.length === 0;\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        setStatus(Status.PENDING);\n\n        const { results } = await moviesAPI.getMovieReviews(movieId);\n\n        const newReviews = results.map(({ id, author, content }) => ({\n          id,\n          author,\n          content,\n        }));\n\n        setReviews(newReviews);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n        setStatus(Status.REJECTED);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  if (status === Status.IDLE) {\n    return <></>;\n  }\n\n  if (status === Status.PENDING) {\n    return <Loader />;\n  }\n\n  if (status === Status.REJECTED) {\n    return <ErrorMessage errorText={error.message} />;\n  }\n\n  if (status === Status.RESOLVED) {\n    return (\n      <>\n        <S.HideTitle>Reviews</S.HideTitle>\n        {isNotFound ? (\n          <S.NotFound>We don`t have any reviews for this movie.</S.NotFound>\n        ) : (\n          <S.List>\n            {reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <ReviewCard author={author} review={content} />\n              </li>\n            ))}\n          </S.List>\n        )}\n      </>\n    );\n  }\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'e4ed0f086cbca77909d91aa152a380ab';\n\nconst defaultParams = {\n  api_key: API_KEY,\n};\n\nexport const getTrending = async () => {\n  const res = await axios.get('/trending/movie/day', { params: defaultParams });\n\n  return res.data;\n};\n\nexport const searchMoviesByQuery = async query => {\n  const params = {\n    ...defaultParams,\n    query,\n  };\n\n  const res = await axios.get('/search/movie', { params });\n\n  return res.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const res = await axios.get(`/movie/${movieId}`, { params: defaultParams });\n\n  return res.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const res = await axios.get(`/movie/${movieId}/credits`, {\n    params: defaultParams,\n  });\n\n  return res.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const res = await axios.get(`/movie/${movieId}/reviews`, {\n    params: defaultParams,\n  });\n\n  return res.data;\n};\n"],"names":["Container","styled","ErrorText","theme","colors","secondaryText","errorText","Card","primaryBg","Author","Review","author","review","HideTitle","List","NotFound","useState","reviews","setReviews","Status","status","setStatus","error","setError","movieId","useParams","isNotFound","length","useEffect","fetchMovieReviews","moviesAPI","results","newReviews","map","id","content","console","log","Loader","ErrorMessage","message","axios","defaultParams","api_key","getTrending","params","res","data","searchMoviesByQuery","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}